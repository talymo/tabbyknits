/*
Theme Name: Tabby Knits
Theme URI: tabbyknits.com
Author: Tabetha Moe
Author URI: https://mountaintopyarn.com
Description: Theme created by Tabetha Moe
Version: 1.0
License: GNU General Public License v2 or later
License URI: http://www.gnu.org/licenses/gpl-2.0.html
Tags: INSERT TAGS HERE SEPARATED BY COMMAS
Text Domain: tabbyknits

This theme, like WordPress, is licensed under the GPL.
Use it to make something cool, have fun, and share what you've learned with others.
*/
@import url("https://fonts.googleapis.com/css2?family=Merriweather:wght@700&family=Montserrat:wght@400;600;700&display=swap");
@import url("https://fonts.googleapis.com/css?family=Raleway:400,400i,700");
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

input, textarea {
  border-radius: 0;
}

textarea:hover,
textarea:active,
textarea:focus,
button:focus,
button:active,
button:hover,
label:focus,
.btn:active,
.btn.active {
  outline: 0 !important;
  -webkit-appearance: none;
}

* {
  box-sizing: border-box;
}

html {
  font-family: "Raleway", sans-serif;
}
html body header .top-bar {
  background-color: #efeae7;
  padding: 10px 10px;
  text-align: center;
}
@media all and (min-width: 768px) {
  html body header .top-bar {
    text-align: right;
  }
}
@media all and (min-width: 992px) {
  html body header .top-bar {
    display: flex;
    text-align: left;
  }
}
html body header .top-bar #social-menu {
  padding: 5px;
  display: inline;
}
@media all and (min-width: 992px) {
  html body header .top-bar #social-menu {
    flex: 1;
  }
}
html body header .top-bar #social-menu ul {
  list-style: none;
  padding: 0;
  margin: 0;
  display: inline;
}
html body header .top-bar #social-menu ul li {
  display: inline-block;
}
html body header .top-bar #social-menu ul li:not(:last-child) {
  padding: 0 8px;
}
html body header .top-bar #social-menu ul li a {
  color: #000;
}
html body header .top-bar #social-menu ul li a i.fab {
  font-size: 22px;
}
html body header .top-bar #search {
  display: none;
}
@media all and (min-width: 992px) {
  html body header .top-bar #search {
    display: block;
    margin-top: 0;
    width: 300px;
    margin-right: 5px;
  }
}
html body header .main-nav-wrapper {
  padding: 10px;
  display: flex;
}
html body header .main-nav-wrapper .logo {
  flex: 1;
}
@media all and (min-width: 992px) {
  html body header .main-nav-wrapper .logo {
    flex: unset;
    width: 200px;
    display: flex;
    align-items: center;
  }
}
html body header .main-nav-wrapper .logo .brand-logo {
  display: inline-block;
  width: auto;
}
html body header .main-nav-wrapper .logo .brand-logo img {
  max-width: 100%;
  display: block;
}
@media all and (min-width: 992px) {
  html body header .main-nav-wrapper .menu-container {
    flex: 1;
  }
}
html body header .main-nav-wrapper .menu-container .side-menu {
  display: none;
}
@media all and (min-width: 992px) {
  html body header .main-nav-wrapper .menu-container .hamburger {
    display: none;
  }
}
html body header .main-nav-wrapper .menu-container .hamburger .hamburger-icon {
  cursor: pointer;
  float: right;
  padding: 25px 10px;
}
html body header .main-nav-wrapper .menu-container .hamburger .hamburger-icon .hamburger-line {
  background: #000;
  display: block;
  height: 2px;
  position: relative;
  width: 24px;
}
html body header .main-nav-wrapper .menu-container .hamburger .hamburger-icon .hamburger-line::before, html body header .main-nav-wrapper .menu-container .hamburger .hamburger-icon .hamburger-line::after {
  background: #000;
  content: "";
  display: block;
  height: 100%;
  position: absolute;
  transition: all 0.2s ease-out;
  width: 100%;
}
html body header .main-nav-wrapper .menu-container .hamburger .hamburger-icon .hamburger-line::before {
  top: 5px;
}
html body header .main-nav-wrapper .menu-container .hamburger .hamburger-icon .hamburger-line::after {
  top: -5px;
}
html body header .main-nav-wrapper .menu-container #menu {
  list-style: none;
  padding: 20px;
  margin: 62px 0 0 0;
  width: 100%;
  height: 100%;
  position: fixed;
  right: -100%;
  background-color: #e8e9eb;
  overflow: hidden;
  transition: right ease-in-out 500ms;
}
@media all and (min-width: 768px) {
  html body header .main-nav-wrapper .menu-container #menu {
    width: 50%;
    right: -50%;
  }
}
@media all and (min-width: 992px) {
  html body header .main-nav-wrapper .menu-container #menu {
    position: relative;
    right: 0;
    margin: 0;
    width: auto;
    padding: 0;
    background-color: transparent;
    height: auto;
    display: flex;
    align-items: center;
  }
}
html body header .main-nav-wrapper .menu-container #menu .menu {
  list-style: none;
  padding: 0;
  text-align: right;
  margin: 0;
}
@media all and (min-width: 992px) {
  html body header .main-nav-wrapper .menu-container #menu .menu {
    width: 100%;
  }
}
html body header .main-nav-wrapper .menu-container #menu .menu li {
  padding: 10px 5px;
}
@media all and (min-width: 992px) {
  html body header .main-nav-wrapper .menu-container #menu .menu li {
    display: inline-block;
  }
}
html body header .main-nav-wrapper .menu-container #menu .menu li a {
  text-decoration: none;
  color: #000;
}
@media all and (min-width: 992px) {
  html body header .main-nav-wrapper .menu-container #menu #search {
    display: none;
  }
}
html body header .main-nav-wrapper .menu-container .side-menu:checked ~ #menu {
  right: 0;
}
html body header .main-nav-wrapper .menu-container .side-menu:checked ~ .hamburger .hamburger-line {
  background: transparent;
}
html body header .main-nav-wrapper .menu-container .side-menu:checked ~ .hamburger .hamburger-line::before {
  transform: rotate(-45deg);
  top: 0;
}
html body header .main-nav-wrapper .menu-container .side-menu:checked ~ .hamburger .hamburger-line::after {
  transform: rotate(45deg);
  top: 0;
}
html body header #search {
  width: 100%;
  text-align: right;
  padding: 5px 0 10px;
  margin-top: 20px;
}
html body header #search .search-box {
  font-size: 16px;
  border: solid 2px #000000;
  display: inline-block;
  position: relative;
  border-radius: 20px;
}
html body header #search .search-box input[type=text] {
  font-weight: bold;
  width: 20px;
  height: 20px;
  padding: 0 10px;
  border: none;
  box-sizing: border-box;
  border-radius: 20px;
  transition: width 800ms cubic-bezier(0.68, -0.55, 0.27, 1.55) 150ms;
  background-color: transparent;
}
html body header #search .search-box input[type=text]:focus {
  outline: none;
}
html body header #search .search-box input[type=text]:not(:-moz-placeholder-shown) {
  width: 200px;
  -moz-transition: width 800ms cubic-bezier(0.68, -0.55, 0.27, 1.55);
  transition: width 800ms cubic-bezier(0.68, -0.55, 0.27, 1.55);
}
html body header #search .search-box input[type=text]:focus, html body header #search .search-box input[type=text]:not(:placeholder-shown) {
  width: 200px;
  transition: width 800ms cubic-bezier(0.68, -0.55, 0.27, 1.55);
}
html body header #search .search-box input[type=text]:not(:-moz-placeholder-shown) + button[type=reset] {
  transform: rotate(-45deg) translateY(0);
  -moz-transition: transform 150ms ease-out 800ms;
  transition: transform 150ms ease-out 800ms;
}
html body header #search .search-box input[type=text]:focus + button[type=reset], html body header #search .search-box input[type=text]:not(:placeholder-shown) + button[type=reset] {
  transform: rotate(-45deg) translateY(0);
  transition: transform 150ms ease-out 800ms;
}
html body header #search .search-box input[type=text]:not(:-moz-placeholder-shown) + button[type=reset]:after {
  opacity: 1;
  -moz-transition: top 150ms ease-out 950ms, right 150ms ease-out 950ms, opacity 150ms ease 950ms;
  transition: top 150ms ease-out 950ms, right 150ms ease-out 950ms, opacity 150ms ease 950ms;
}
html body header #search .search-box input[type=text]:focus + button[type=reset]:after, html body header #search .search-box input[type=text]:not(:placeholder-shown) + button[type=reset]:after {
  opacity: 1;
  transition: top 150ms ease-out 950ms, right 150ms ease-out 950ms, opacity 150ms ease 950ms;
}
html body header #search .search-box button[type=reset] {
  background-color: transparent;
  width: 10px;
  height: 10px;
  border: 0;
  padding: 0;
  outline: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 5px;
  right: 5px;
  transform: rotate(-45deg) translateY(18px);
  transition: transform 150ms ease-out 150ms;
}
html body header #search .search-box button[type=reset]:before, html body header #search .search-box button[type=reset]:after {
  content: "";
  background-color: #000000;
  width: 2px;
  height: 10px;
  position: absolute;
}
html body header #search .search-box button[type=reset]:after {
  transform: rotate(90deg);
  opacity: 0;
  transition: transform 150ms ease-out, opacity 150ms ease-out;
}
html body footer {
  background-color: #e8e9eb;
  padding: 20px;
  text-align: center;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
